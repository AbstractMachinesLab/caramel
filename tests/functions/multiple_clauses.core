module 'multiple_clauses' ['iff_using_function'/1,
			   'iff_using_headers'/3,
			   'iff_using_if'/3,
			   'iff_using_match'/3,
			   'module_info'/0,
			   'module_info'/1]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[109|[117|[108|[116|[105|[112|[108|[101|[95|[99|[108|[97|[117|[115|[101|[115|[46|[101|[114|[108]]]]]]]]]]]]]]]]]]]],1}]]
'iff_using_headers'/3 =
    %% Line 9
    ( fun (_0,_1,_2) ->
	  ( case <_0,_1,_2> of
	      <'true',F,_6> when 'true' ->
		  F
	      ( <_5,_4,_3> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_5,_4,_3})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'iff_using_headers',3}}] )
      -| [{'function',{'iff_using_headers',3}}] )
'iff_using_function'/1 =
    %% Line 11
    ( fun (_0) ->
	  ( case ( _0
		   -| [{'function',{'iff_using_function',1}}] ) of
	      <{'false',_2,F}> when 'true' ->
		  F
	      %% Line 12
	      <{'true',F,_3}> when 'true' ->
		  F
	      ( <_1> when 'true' ->
		    primop 'match_fail'
			({'function_clause',_1})
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'iff_using_function',1}}] )
      -| [{'function',{'iff_using_function',1}}] )
'iff_using_if'/3 =
    %% Line 14
    ( fun (_0,_1,_2) ->
	  %% Line 15
	  case _0 of
	    %% Line 16
	    <'true'> when 'true' ->
		apply _1
		    ()
	    %% Line 17
	    <'false'> when 'true' ->
		apply _2
		    ()
	    ( <_3> when 'true' ->
		  primop 'match_fail'
		      ({'case_clause',_3})
	      -| ['compiler_generated'] )
	  end
      -| [{'function',{'iff_using_if',3}}] )
'iff_using_match'/3 =
    %% Line 20
    ( fun (_0,_1,_2) ->
	  %% Line 21
	  case _0 of
	    %% Line 22
	    <'true'> when 'true' ->
		_1
	    %% Line 23
	    <'false'> when 'true' ->
		_2
	    ( <_3> when 'true' ->
		  primop 'match_fail'
		      ({'case_clause',_3})
	      -| ['compiler_generated'] )
	  end
      -| [{'function',{'iff_using_match',3}}] )
'module_info'/0 =
    ( fun () ->
	  call 'erlang':'get_module_info'
	      ('multiple_clauses')
      -| [{'function',{'module_info',0}}] )
'module_info'/1 =
    ( fun (_0) ->
	  call 'erlang':'get_module_info'
	      ('multiple_clauses', ( _0
				     -| [{'function',{'module_info',1}}] ))
      -| [{'function',{'module_info',1}}] )
end